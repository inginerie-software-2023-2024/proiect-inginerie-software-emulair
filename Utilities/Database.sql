CREATE TABLE Roles (
	RoleID INT PRIMARY KEY,
	RoleName varchar(20)
);

CREATE TABLE Users (
    UserID UNIQUEIDENTIFIER PRIMARY KEY,
	RoleID INT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100) UNIQUE,
    PasswordHash VARCHAR(255),
    RegistrationDate DATETIME,
	IsDeleted BIT,
	FOREIGN KEY (RoleID) REFERENCES Roles(RoleID),
);

CREATE TABLE Games (
    GameID UNIQUEIDENTIFIER PRIMARY KEY,
    Title VARCHAR(100),
    Description TEXT,
    ReleaseDate DATE,
    IsDeleted BIT
);

CREATE TABLE UserGames (
	UserID UNIQUEIDENTIFIER,
    GameID UNIQUEIDENTIFIER,
    TotalHoursPlayed INT,
	LastPlayed DATETIME,
	PRIMARY KEY (UserID, GameID),
	FOREIGN KEY (UserID) REFERENCES Users(UserID),
	FOREIGN KEY (GameID) REFERENCES Games(GameID)

);

CREATE TABLE Reviews (
    ReviewID UNIQUEIDENTIFIER PRIMARY KEY,
    GameID UNIQUEIDENTIFIER,
    UserID UNIQUEIDENTIFIER,
    Rating INT,
    Comment TEXT,
    ReviewDate DATETIME,
	IsDeleted BIT,
    FOREIGN KEY (GameID) REFERENCES Games(GameID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Highlights (
    HighlightID UNIQUEIDENTIFIER PRIMARY KEY,
    Title VARCHAR(100),
    Description TEXT,
    ImageURL VARCHAR(255),
    LinkURL VARCHAR(255),
	IsDeleted BIT
);

CREATE TABLE Images (
	ImageID UNIQUEIDENTIFIER PRIMARY KEY,
	Content	VARBINARY(MAX)
);

CREATE TABLE Stats (
	StatID UNIQUEIDENTIFIER PRIMARY KEY,
	GameID UNIQUEIDENTIFIER,
	Name VARCHAR(100),
	FOREIGN KEY (GameID) REFERENCES Games(GameID)
);

CREATE TABLE UserStats (
    StatID UNIQUEIDENTIFIER,
    UserID UNIQUEIDENTIFIER,
	-- when one value is not null, other two are null
	ValueN DECIMAL,
	ValueC VARCHAR(100),
	ValueB BIT,
	PRIMARY KEY (StatID, UserID),
	FOREIGN KEY (StatID) REFERENCES Stats(StatID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Achievements (
	AchievementID UNIQUEIDENTIFIER,
	GameID UNIQUEIDENTIFIER,
	IconPendingID UNIQUEIDENTIFIER,
	IconCompletedID UNIQUEIDENTIFIER,
	Name VARCHAR(100),
	Description VARCHAR(100),
	PRIMARY KEY (AchievementID, GameID),
	FOREIGN KEY (GameID) REFERENCES Games(GameID),
	FOREIGN KEY (IconPendingID) REFERENCES Images(ImageID),
	FOREIGN KEY (IconCompletedID) REFERENCES Images(ImageID),
);

CREATE TABLE UserAchievements (
	UserID UNIQUEIDENTIFIER,
	AchievementID UNIQUEIDENTIFIER,
	GameID UNIQUEIDENTIFIER,
	IsUnlocked BIT,
	UnlockedAt TIMESTAMP,
	PRIMARY KEY (AchievementID, UserID),
	FOREIGN KEY (AchievementID, GameId) REFERENCES Achievements(AchievementID, GameId),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);